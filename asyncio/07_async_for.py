# представим, что у нас есть метод, который асинхронно выкачивает документы
# мэйн в цикле вызывает ф-ю гет пейджес, куда передает список доков, ГП для каждого документа из списка
# вызывает ф-ю фетч док (которая принимает этот самый отдельный док и возвращает его), ФД записывает в результат(док)
# вызов себя и потом уже по этому результату проходимся в цикле
import asyncio


async def fetch_doc(doc):  # метод для загрузки документов
    await asyncio.sleep(1)  # эмулируем работу
    return doc


# метод, в который приходит список документов, тут генератор
async def get_pages(docs):
    for cur_doc in docs:  # ожидаем результат от фет_док
        doc = await fetch_doc(cur_doc)  # док - это типа заглушка под результат, как я понял,
        # в док будет асинх вызываться и ожидаться результат исполнения фетч_док с переданным документом из списка
        for page in doc:
            await asyncio.sleep(1)
            yield page


async def main():
    # здесь нам надо пройтись по гет_пейджес с асинхронным ожиданием результатов
    # ф-я гет_пэйджес асинх, поэтому по ней надо асинх пройтись
    async for page in get_pages(['doc1', 'doc2']):
        print(f'{page=}')


if __name__ == '__main__':
    asyncio.run(main())
